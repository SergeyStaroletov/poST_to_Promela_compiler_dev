/**
 * generated by Xtext 2.26.0
 */
package iae.post.poST;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>For Statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link iae.post.poST.ForStatement#getVariable <em>Variable</em>}</li>
 *   <li>{@link iae.post.poST.ForStatement#getForList <em>For List</em>}</li>
 * </ul>
 *
 * @see iae.post.poST.PoSTPackage#getForStatement()
 * @model
 * @generated
 */
public interface ForStatement extends IterationStatement
{
  /**
   * Returns the value of the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable</em>' reference.
   * @see #setVariable(SymbolicVariable)
   * @see iae.post.poST.PoSTPackage#getForStatement_Variable()
   * @model
   * @generated
   */
  SymbolicVariable getVariable();

  /**
   * Sets the value of the '{@link iae.post.poST.ForStatement#getVariable <em>Variable</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable</em>' reference.
   * @see #getVariable()
   * @generated
   */
  void setVariable(SymbolicVariable value);

  /**
   * Returns the value of the '<em><b>For List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>For List</em>' containment reference.
   * @see #setForList(ForList)
   * @see iae.post.poST.PoSTPackage#getForStatement_ForList()
   * @model containment="true"
   * @generated
   */
  ForList getForList();

  /**
   * Sets the value of the '{@link iae.post.poST.ForStatement#getForList <em>For List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>For List</em>' containment reference.
   * @see #getForList()
   * @generated
   */
  void setForList(ForList value);

} // ForStatement
